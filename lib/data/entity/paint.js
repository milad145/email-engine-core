/*mongoose.paint('paint', new mongoose.Schema({    media: String,    status: Number,    createdAt: Date,    activatedAt:Date,    visits : Number,    visitors : Number}));*/import {ObjectId} from "mongodb";export default class Paint {    constructor(db) {        this._paint = db.collection('paint');    }    init() {        return this._paint.createIndexes([            {key: {img: 1}, unique: true}        ])    }    /**     * Add a new paint     * @returns {Promise}     * @param img {String}     * @param animation {String}     * @param username {String}     */    addPaint(img, animation = "dance", username) {        let paintObject = {            img, animation, username,            status: 0,            createdAt: new Date(),            visits: 0        }        return this._paint.insertOne(paintObject, {})    }    getPaint(_id) {        _id = new ObjectId(_id)        return this._paint.findOne({_id}, {})    }    getPaintStatus(_id) {        _id = new ObjectId(_id)        return this._paint.findOne({_id}, {projection: {status: 1}})    }    deletePaint(paint) {        return new Promise((resolve, reject) => {            return this._paint.deleteOne({_id: paint})                .then(payload => resolve(payload))                .catch(error => reject(error))        })    }    /**     * Get UnReady Animation     * @returns {*}     */    getUnReadyAnimation() {        return this._paint.findOneAndUpdate({status: {$in: [0, 1]}}, {$set: {status: 1}}, {            sort: {createdAt: 1},            returnNewDocument: true        })    }    bakePaint(_id) {        return new Promise((resolve, reject) => {            return this._paint.findOneAndUpdate({_id}, {$set: {status: 2}}, {returnOriginal: false})                .then(data => resolve(data.value))                .catch(err => reject(err))        })    }}