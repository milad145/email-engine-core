/*mongoose.user('user', new mongoose.Schema({    media: String,    status: Number,    createdAt: Date,    activatedAt:Date,    visits : Number,    visitors : Number}));*/import {ObjectId} from "mongodb";export default class User {    constructor(db) {        this._user = db.collection('user');    }    init() {        return this._user.createIndexes([            {key: {email: 1}, unique: true}        ])    }    /**     *     * @param type {String}     * @param accessToken {String}     * @param refreshToken {String}     * @param id {String}     * @param email {String}     * @param displayName {String}     * @param extraData {Object}     * @returns {Promise<ObjectId>}     */    addUser(type, accessToken, refreshToken, id, email, displayName, extraData) {        return this._user.findOneAndUpdate({email}, {            $set: {                type,                extraData,                accessToken,                refreshToken,                lastLogin: new Date()            }        }, {upsert: true, returnDocument: "after"})            .then(user => user._id)    }    /**     * Get User by _id     * @param _id {ObjectId}     * @param project {Object}     * @returns {Promise<Object>}     */    getUser(_id, project) {        return this._user.findOne({_id}, {project})    }    updateOne(_id, update) {        return this._user.findOneAndUpdate({_id}, {$set: update})    }}