import http from 'http';import path from "path";import express from "express";import session from "express-session";import connectMongo from "connect-mongo";import cors from 'cors'import db from "./data/db.js";import {appDir} from "./utils/utility.js";import viewer from "./routes/view.js";import {exception, unhandled} from "./routes/error.js";export default function () {    if (typeof SecConfig['dbConfig'] !== "string")        return console.error("Database connection string config is missing!");    else        start();};function start() {    db.connect(SecConfig['dbConfig'], function (err) {        if (err) {            console.error("Database connection failed:", err);            setTimeout(() => start(), 10000);        } else {            initExpress();        }    });}function initExpress() {    const app = express();    app.disable("x-powered-by");    app.set("view engine", "ejs");    app.use("/js", express.static(path.join(appDir, "views", "assets", "js")));    app.use("/style", express.static(path.join(appDir, "views", "assets", "style")));    app.use("/images", express.static(path.join(appDir, "views", "assets", "images")));    app.use("/media", express.static(path.join(appDir, "views", "assets", "media")));    app.use("/fonts", express.static(path.join(appDir, "views", "assets", "style", "webfonts")));    app.use(cors());    app.use(express.text());    app.use(express.json({limit: "2.0mb", extended: true}));    app.use(express.urlencoded({limit: "0.4mb", extended: true}));    app.use(session({        name: "session",        cookie: {secure: false, maxAge: Date.parse("2000-01-02T00:15:00Z")},        secret: "g9Sp+pKeOR64lDXf1",        resave: true,        rolling: true,        saveUninitialized: true,        store: connectMongo.create({mongoUrl: SecConfig['dbConfig']})    }));    app.use(viewer);    app.use(unhandled);    app.use(exception);    let server = http.createServer({}, app);    server.listen(EnvConfig['port'], function (err) {        if (!err) {            console.log('Express HTTPS server listening on port %d!', EnvConfig['port'])        }    }).on('error', function (err) {        console.error("HTTPS server error:", err.message);        process.exit(1);    })}