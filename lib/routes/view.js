/* clients.js */import path from 'path';import {URL} from "url";import express from "express"import {ObjectId} from "mongodb"import application from "../core/application.js";import {isLogin} from "../core/middleware.js"import {setResponseCode, setErrorResponse} from "../utils/utility.js";let router = express.Router();//*********************** POST ***********************//router.post("/login", (req, res) => {    let {username, password} = req.body;    let login = false;    username = username.toLowerCase()    if (EnvConfig["users"][username] === password) login = true;    req.session.login = login;    req.session.username = username;    res.send(login)});//*********************** GET ***********************//router.get("/", (req, res) => {    const {clientAccessToken, accessToken} = req.session;    res.redirect((clientAccessToken && accessToken) ? "/" : "login")});router.get("/login", (req, res) => {    application.login()        .then(result => res.redirect(result))        .catch(err => setErrorResponse(req, res, err))});router.get("/azure-oauth", (req, res) => {    let {code} = req.query    if (typeof code === "string") {        application.azureOAuthRedirection(code)            .then(accessToken => {                req.session.accessToken = accessToken;                return application.azureClientAccessToken()            })            .then(clientAccessToken => {                req.session.clientAccessToken = clientAccessToken;            })            .catch(err => setErrorResponse(req, res, err))    } else        setResponseCode(req, res, 400)});router.get("/get-mails/:num", isLogin, function (req, res) {    let {num} = req.params;    let {accessToken} = req.session    application.getMails(num, accessToken)        .then(messages => res.send(messages))        .catch(err => setErrorResponse(req, res, err))})export default router;